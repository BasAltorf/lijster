<project name="lijster14" pubsub="auto" threads="1" heartbeat-interval="1">
  <metadata>
    <meta id="studioUploadedBy">anonymousUser</meta>
    <meta id="studioUploaded">1659684772363</meta>
    <meta id="studioModifiedBy">anonymousUser</meta>
    <meta id="studioModified">1660916696479</meta>
    <meta id="layout">{"contQuery":{"AggregateTemp":{"x":-345,"y":-135},"CalculateMeasuresFromOBIS":{"x":400,"y":550},"CheckDuplicatesAllowOnlyFirstObs":{"x":400,"y":150},"CreateTransposeGroup":{"x":405,"y":250},"DeduplicateP1":{"x":410,"y":-50},"JoinTelegram":{"x":420,"y":-245},"KeepTimeTemp":{"x":-345,"y":65},"OneRecordperTranspose":{"x":410,"y":460},"P1Telegram":{"x":420,"y":-430},"ParseMessage":{"x":-345,"y":-325},"ParseTelegram":{"x":115,"y":-340},"ReadP1":{"x":115,"y":-445},"ReadTemp":{"x":-345,"y":-425},"RemoveStateTemp":{"x":-345,"y":-35},"RetainSixtySecondsP1":{"x":405,"y":40},"RetainTempSixtyMinutes":{"x":-345,"y":-230},"SelectedMeasuresP1":{"x":420,"y":-150},"TransposeP1":{"x":400,"y":365}}}</meta>
  </metadata>
  <contqueries>
    <contquery name="contQuery" trace="computeWindow">
      <windows>
        <window-source pubsub="true" insert-only="true" autogen-key="true" index="pi_EMPTY" name="ReadP1">
          <description><![CDATA[The Source window in this model receives input data from the P1 module with telegram input]]></description>
          <schema>
            <fields>
              <field name="sensor_bericht" type="string"/>
              <field name="id" type="int64" key="true"/>
            </fields>
          </schema>
          <connectors>
            <connector class="fs" name="test_input_file" active="false">
              <description><![CDATA[read input from test csv file]]></description>
              <properties>
                <property name="type"><![CDATA[pub]]></property>
                <property name="csvfielddelimiter"><![CDATA[,]]></property>
                <property name="noautogenfield"><![CDATA[true]]></property>
                <property name="addcsvopcode"><![CDATA[true]]></property>
                <property name="addcsvflags"><![CDATA[normal]]></property>
                <property name="fsname"><![CDATA[/data/input/lijster/testdata.csv]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
            <connector class="fs" name="serial_port">
              <description><![CDATA[serial port with temperature sensor connected]]></description>
              <properties>
                <property name="type"><![CDATA[pub]]></property>
                <property name="csvfielddelimiter"><![CDATA[,]]></property>
                <property name="noautogenfield"><![CDATA[true]]></property>
                <property name="addcsvopcode"><![CDATA[true]]></property>
                <property name="addcsvflags"><![CDATA[normal]]></property>
                <property name="fsname"><![CDATA[/dev/ttyUSB0]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
            <connector class="fs" name="P1" active="false">
              <properties>
                <property name="type"><![CDATA[pub]]></property>
                <property name="addcsvopcode"><![CDATA[true]]></property>
                <property name="fsname"><![CDATA[/dev/ttyUSB0]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
          </connectors>
        </window-source>
        <window-functional index="pi_EMPTY" name="ParseTelegram">
          <schema>
            <fields>
              <field name="sensor_bericht" type="string"/>
              <field name="id" type="int64" key="true"/>
              <field name="OBIS" type="string" key="true"/>
              <field name="phenomenon_time" type="stamp" key="true"/>
              <field name="rounded_time" type="stamp" key="true"/>
              <field name="sensor_id" type="int64" key="true"/>
            </fields>
          </schema>
          <function-context>
            <functions>
              <function name="phenomenon_time"><![CDATA[eventTimestamp()]]></function>
              <function name="OBIS"><![CDATA[substringBefore($sensor_bericht,'(')]]></function>
              <function name="Value2"><![CDATA[substringBefore(substringAfter($sensor_bericht,'(',2),')')]]></function>
              <function name="Value1"><![CDATA[substringBefore(substringAfter($sensor_bericht,'('),')')]]></function>
              <function name="rounded_time"><![CDATA[product(round(quotient($phenomenon_time,1000000)),1000000)]]></function>
              <function name="sensor_id"><![CDATA[1]]></function>
            </functions>
          </function-context>
          <connectors>
            <connector class="fs" name="output_csv" active="false">
              <properties>
                <property name="type"><![CDATA[sub]]></property>
                <property name="header"><![CDATA[true]]></property>
                <property name="snapshot"><![CDATA[false]]></property>
                <property name="fsname"><![CDATA[/data/output/lijster/temperature.csv]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
          </connectors>
        </window-functional>
        <window-source pubsub="true" insert-only="true" autogen-key="true" index="pi_EMPTY" name="ReadTemp">
          <description><![CDATA[The Source window in this model receives input data from a sensor receiving containing readings in the format+022.3C.]]></description>
          <schema>
            <fields>
              <field name="sensor_bericht" type="string"/>
              <field name="id" type="int64" key="true"/>
            </fields>
          </schema>
          <connectors>
            <connector class="fs" name="test_input_file" active="false">
              <description><![CDATA[read input from test csv file]]></description>
              <properties>
                <property name="type"><![CDATA[pub]]></property>
                <property name="csvfielddelimiter"><![CDATA[,]]></property>
                <property name="noautogenfield"><![CDATA[true]]></property>
                <property name="addcsvopcode"><![CDATA[true]]></property>
                <property name="addcsvflags"><![CDATA[normal]]></property>
                <property name="fsname"><![CDATA[/data/input/lijster/testdata.csv]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
            <connector class="fs" name="serial_port">
              <description><![CDATA[serial port with temperature sensor connected]]></description>
              <properties>
                <property name="type"><![CDATA[pub]]></property>
                <property name="csvfielddelimiter"><![CDATA[,]]></property>
                <property name="noautogenfield"><![CDATA[true]]></property>
                <property name="addcsvopcode"><![CDATA[true]]></property>
                <property name="addcsvflags"><![CDATA[normal]]></property>
                <property name="fsname"><![CDATA[/dev/ttyS0]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
          </connectors>
        </window-source>
        <window-functional index="pi_EMPTY" name="ParseMessage">
          <schema>
            <fields>
              <field name="sensor_id" type="int32" key="true"/>
              <field name="sensor_bericht" type="string"/>
              <field name="id" type="int64" key="true"/>
              <field name="temperatuur" type="double"/>
              <field name="phenomenon_time" type="stamp" key="true"/>
              <field name="period" type="stamp"/>
              <field name="start_time" type="stamp"/>
              <field name="end_time" type="stamp"/>
              <field name="timeCurrent" type="date"/>
              <field name="timestring" type="string"/>
            </fields>
          </schema>
          <function-context>
            <expressions>
              <expression name="temprgx"><![CDATA[[^-]([0-9]*\.[0-9]*)C]]></expression>
            </expressions>
            <functions>
              <function name="sensor_id"><![CDATA[1]]></function>
              <function name="temperatuur"><![CDATA[number(rgx(#temprgx,$sensor_bericht,1))]]></function>
              <function name="phenomenon_time"><![CDATA[eventTimestamp()]]></function>
              <function name="timeCurrent"><![CDATA[timeCurrent()]]></function>
              <function name="micros"><![CDATA[quotient(timeMilli($phenomenon_time),1000)]]></function>
              <function name="period"><![CDATA[product(round(quotient($phenomenon_time,600000000)),600000000)]]></function>
              <function name="start_time"><![CDATA[diff($period,300000000)]]></function>
              <function name="end_time"><![CDATA[sum($period,300000000)]]></function>
              <function name="timestring"><![CDATA[timeString(quotient(phenomenon_time,1000000),'%Y-%m-%d %H:%M:%S')]]></function>
            </functions>
          </function-context>
          <connectors>
            <connector class="fs" name="output_csv" active="false">
              <properties>
                <property name="type"><![CDATA[sub]]></property>
                <property name="header"><![CDATA[true]]></property>
                <property name="snapshot"><![CDATA[false]]></property>
                <property name="fsname"><![CDATA[/data/output/lijster/temperature.csv]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
          </connectors>
        </window-functional>
        <window-copy name="RetainTempSixtyMinutes">
          <retention type="bytime_sliding" field="phenomenon_time"><![CDATA[60 minutes]]></retention>
        </window-copy>
        <window-aggregate name="AggregateTemp">
          <schema>
            <fields>
              <field name="sensor_id" type="int32" key="true"/>
              <field name="period" type="stamp"/>
              <field name="previous_period" type="stamp"/>
              <field name="temperatuur" type="double"/>
              <field name="start_time" type="stamp"/>
              <field name="end_time" type="stamp"/>
              <field name="count" type="int64"/>
            </fields>
          </schema>
          <output>
            <field-expr><![CDATA[ESP_aLast(period)]]></field-expr>
            <field-expr><![CDATA[ESP_aLag(period, 1)]]></field-expr>
            <field-expr><![CDATA[ESP_aAve(temperatuur)]]></field-expr>
            <field-expr><![CDATA[ESP_aLast(start_time)]]></field-expr>
            <field-expr><![CDATA[ESP_aLast(end_time)]]></field-expr>
            <field-expr><![CDATA[ESP_aCount()]]></field-expr>
          </output>
        </window-aggregate>
        <window-filter index="pi_EMPTY" name="SelectedMeasuresP1">
          <expression><![CDATA[measure== 'Power' OR measure== 'Gas' OR measure == 'Tariff' OR measure == 'Electricity_low' OR measure =='Electricity_normal' OR measure=='P1_dttm']]></expression>
        </window-filter>
        <window-remove-state remove="deletes retentionUpdates retentionDeletes updateBlockDeletes" name="RemoveStateTemp">
          <connectors>
            <connector class="fs" name="output_csv" active="false">
              <properties>
                <property name="type"><![CDATA[sub]]></property>
                <property name="header"><![CDATA[true]]></property>
                <property name="snapshot"><![CDATA[false]]></property>
                <property name="fsname"><![CDATA[/data/output/lijster/temperature.csv]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
          </connectors>
        </window-remove-state>
        <window-filter index="pi_EMPTY" name="KeepTimeTemp">
          <expression><![CDATA[previous_period < period]]></expression>
          <connectors>
            <connector class="fs" name="output_csv">
              <properties>
                <property name="type"><![CDATA[sub]]></property>
                <property name="header"><![CDATA[true]]></property>
                <property name="snapshot"><![CDATA[false]]></property>
                <property name="fsname"><![CDATA[/data/output/lijster/temperature.csv]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
          </connectors>
        </window-filter>
        <window-source index="pi_EMPTY" insert-only="true" name="P1Telegram">
          <description><![CDATA[Telegram OBIS reference]]></description>
          <schema>
            <fields>
              <field name="description" type="string"/>
              <field name="OBIS" type="string" key="true"/>
              <field name="measure" type="string"/>
            </fields>
          </schema>
          <connectors>
            <connector class="fs" name="OBIS">
              <properties>
                <property name="type"><![CDATA[pub]]></property>
                <property name="csvfielddelimiter"><![CDATA[;]]></property>
                <property name="noautogenfield"><![CDATA[true]]></property>
                <property name="addcsvopcode"><![CDATA[true]]></property>
                <property name="addcsvflags"><![CDATA[normal]]></property>
                <property name="fsname"><![CDATA[/data/OBIS.csv]]></property>
                <property name="fstype"><![CDATA[csv]]></property>
              </properties>
            </connector>
          </connectors>
        </window-source>
        <window-join index="pi_EMPTY" output-insert-only="true" name="JoinTelegram">
          <join type="leftouter">
            <conditions>
              <fields left="OBIS" right="OBIS"/>
            </conditions>
          </join>
          <output>
            <field-expr name="sensor_bericht" type="string"><![CDATA[l_sensor_bericht]]></field-expr>
            <field-expr name="measure" type="string"><![CDATA[r_measure]]></field-expr>
            <field-expr name="description" type="string"><![CDATA[r_description]]></field-expr>
          </output>
        </window-join>
        <window-copy name="RetainSixtySecondsP1">
          <retention type="bytime_sliding"><![CDATA[60 seconds]]></retention>
        </window-copy>
        <window-remove-state remove="deletes retentionUpdates retentionDeletes updateBlockDeletes" name="DeduplicateP1"/>
        <window-aggregate output-insert-only="true" name="CheckDuplicatesAllowOnlyFirstObs">
          <schema>
            <fields>
              <field name="rounded_time" type="stamp" key="true"/>
              <field name="OBIS" type="string" key="true"/>
              <field name="measure" type="string"/>
              <field name="sensor_bericht" type="string"/>
              <field name="sensor_id" type="int64"/>
            </fields>
          </schema>
          <output>
            <field-expr><![CDATA[ESP_aFirst(measure)]]></field-expr>
            <field-expr><![CDATA[ESP_aFirst(sensor_bericht)]]></field-expr>
            <field-expr><![CDATA[ESP_aFirst(sensor_id)]]></field-expr>
          </output>
        </window-aggregate>
        <window-transpose clear-timeout="never" mode="wide" tags-included="P1_dttm,Gas,Power,Tariff,Electricity_low,Electricity_normal" tag-name="measure" tag-values="sensor_bericht" group-by="transpose_group" name="TransposeP1"/>
        <window-functional collapse-updates="false" index="pi_EMPTY" output-insert-only="true" name="CreateTransposeGroup">
          <schema>
            <fields>
              <field name="rounded_time" type="stamp"/>
              <field name="OBIS" type="string"/>
              <field name="measure" type="string"/>
              <field name="sensor_bericht" type="string"/>
              <field name="sensor_id" type="int64" key="true"/>
              <field name="transpose_group" type="string"/>
            </fields>
          </schema>
          <function-context>
            <functions>
              <function name="transpose_group"><![CDATA[concat('Sensor 1_', timeString(quotient(rounded_time,1000000),'%y-%m-%y %H:%M:%S'))]]></function>
            </functions>
          </function-context>
        </window-functional>
        <window-filter index="pi_EMPTY" name="OneRecordperTranspose">
          <expression><![CDATA[not isnull(P1_dttm_sensor_bericht)
and not isnull(Power_sensor_bericht)
and not isnull(Gas_sensor_bericht)
and not isnull(Tariff_sensor_bericht)
and not isnull(Electricity_low_sensor_bericht)
and not isnull(Electricity_normal_sensor_bericht)]]></expression>
        </window-filter>
        <window-functional index="pi_EMPTY" name="CalculateMeasuresFromOBIS">
          <schema>
            <fields>
              <field name="sensor_id" type="int64" key="true"/>
              <field name="p1_dttm" type="date" key="true"/>
              <field name="gas_dttm" type="date"/>
              <field name="gas" type="double"/>
              <field name="power" type="double"/>
              <field name="electricity_low" type="double"/>
              <field name="electricity_normal" type="double"/>
              <field name="tariff" type="int32"/>
            </fields>
          </schema>
          <function-context>
            <functions>
              <function name="p1_dttm"><![CDATA[timeParse(  substringBefore(substringAfter($P1_dttm_sensor_bericht,'('),'S')
,'%y%m%d%H%M%S')]]></function>
              <function name="gas_dttm"><![CDATA[timeParse(  substringBefore(substringAfter($Gas_sensor_bericht,'('),'S')
,'%y%m%d%H%M%S')]]></function>
              <function name="gas"><![CDATA[substringBefore(substringAfter($Gas_sensor_bericht,'(',2),'*')]]></function>
              <function name="power"><![CDATA[substringBefore(substringAfter($Power_sensor_bericht,'('),'*')]]></function>
              <function name="electricity_low"><![CDATA[substringBefore(substringAfter($Electricity_low_sensor_bericht,'('),'*')]]></function>
              <function name="electricity_normal"><![CDATA[substringBefore(substringAfter($Electricity_normal_sensor_bericht,'('),'*')]]></function>
              <function name="tariff"><![CDATA[substringBefore(substringAfter($Tariff_sensor_bericht,'('),')')]]></function>
            </functions>
          </function-context>
        </window-functional>
      </windows>
      <edges>
        <description/>
        <edge source="ReadP1" target="ParseTelegram"/>
        <edge source="ReadTemp" target="ParseMessage"/>
        <edge source="ParseMessage" target="RetainTempSixtyMinutes"/>
        <edge source="RetainTempSixtyMinutes" target="AggregateTemp"/>
        <edge source="AggregateTemp" target="RemoveStateTemp"/>
        <edge source="RemoveStateTemp" target="KeepTimeTemp"/>
        <edge source="ParseTelegram" target="JoinTelegram" role="left"/>
        <edge source="P1Telegram" target="JoinTelegram" role="right"/>
        <edge source="JoinTelegram" target="SelectedMeasuresP1"/>
        <edge source="SelectedMeasuresP1" target="DeduplicateP1"/>
        <edge source="DeduplicateP1" target="RetainSixtySecondsP1"/>
        <edge source="RetainSixtySecondsP1" target="CheckDuplicatesAllowOnlyFirstObs"/>
        <edge source="CheckDuplicatesAllowOnlyFirstObs" target="CreateTransposeGroup"/>
        <edge source="CreateTransposeGroup" target="TransposeP1"/>
        <edge source="TransposeP1" target="OneRecordperTranspose"/>
        <edge source="OneRecordperTranspose" target="CalculateMeasuresFromOBIS"/>
      </edges>
    </contquery>
  </contqueries>
</project>